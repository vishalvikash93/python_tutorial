1. Basic Syntax and Operations
2. Write a Python program to swap two variables without using a temporary variable.
   Create a program that takes a list of numbers and prints the sum, average, maximum, and minimum of the list.
   Write a Python program to check if a number is prime.
   Create a program that prints the Fibonacci sequence up to a given number of terms.
3. String
    1.Reverse a String
    Write a program that takes a string as input and prints the reversed string using slicing.
    2.	Extract a Substring
    Take a string and two indices as input. Print the substring from the given
     start index to the end index (excluding the end index).
    3.	Check for Palindrome
    Write a program to check whether the given string is a palindrome or not using slicing.
    4.	Find and Replace a Word
    Take a sentence and a word as input. If the word exists in the sentence, replace it with "Python", otherwise print "Word not found".
    5.	Extract Every Second Character
    Given a string, print every second character using slicing.
    6.	Check First and Last Character
    Take a string as input and check whether the first and last characters are the same (ignoring case).
    7.	Convert First Letter of Each Word to Uppercase
    Write a program that takes a sentence as input and prints the initials of each word in uppercase.
4. List
    1. How can you reverse a Python list?
    2. How do you check if an item exists in a Python list?
    3. What method would you use to concatenate two lists in Python?
    4. How do you find the length of a list in Python?
    5. How do you sort a list in Python, and what are the options for sorting (ascending vs descending)?
    6. How would you remove duplicates from a Python list
5. Tuple.
    1.What is a tuple in Python, and how is it different from a list?
    2. How do you create a tuple in Python?
    3. Can you modify the elements of a tuple once it is created? Why or why not?
    4. How do you access elements in a tuple?
    5. How can you convert a tuple into a list and vice versa?
6. Set
    1. Write a Python program to find the union of two sets.
    Input:
        Set A: {1, 2, 3, 4}
        Set B: {3, 4, 5, 6}
    2. Write a Python program to find the intersection of two sets.
    Input:
        Set A: {1, 2, 3, 4}
        Set B: {3, 4, 5, 6}
    3. Write a Python program to find the difference between two sets, i.e., elements that are in Set A but not in Set B.
    Input:
        Set A: {1, 2, 3, 4, 5}
        Set B: {3, 4, 5, 6, 7}
    4. Write a Python program to check if one set is a subset of another.
    Input:
        Set A: {1, 2, 3}
        Set B: {1, 2, 3, 4, 5}
7. Dictionary
    1. Write a Python program to merge two dictionaries. If there are any common keys, their values should be summed.
        Dictionary A: {'a': 10, 'b': 20}
        Dictionary B: {'b': 30, 'c': 40}
    2. Write a Python program to find the key with the highest value in a dictionary.
        Dictionary: {'a': 5, 'b': 10, 'c': 3, 'd': 7}
    3. Write a Python program to remove a key from a dictionary. If the key does not exist, handle it gracefully.
        Dictionary: {'a': 1, 'b': 2, 'c': 3}
        Key to remove: 'b'
    4. Write a Python program to check if a key exists in a dictionary.
        Dictionary: {'a': 100, 'b': 200}
8. List comprehension
    1. Write a Python program using list comprehension to generate a list of all odd numbers between 1 and 20.
       Range: 1 to 20
    2. Write a Python program using list comprehension to convert a list of temperatures from Celsius to Fahrenheit.
       List of Celsius temperatures: [0, 10, 20, 30, 40]
    3. Write a Python program using list comprehension to flatten a nested list.
       Nested List: [[1, 2, 3], [4, 5], [6, 7]]
9. Dict comprehension
    1. Write a dictionary comprehension that creates a dictionary with even numbers from 1 to 20 as keys, and their squares as values.
    2. Given a dictionary {1: 'a', 2: 'b', 3: 'c'}, use dictionary comprehension to swap the keys and values.
    3. Given a string "interview", use dictionary comprehension to create a dictionary where the keys are the characters and the values are their frequencies in the string.
    4. Given a dictionary {1: 10, 2: 15, 3: 20, 4: 25, 5: 30}, use dictionary comprehension to filter only the keys whose values are even.
9. Functions
Write a function that takes a string and returns the string reversed.
Create a function that takes a list of numbers and returns a new list with only the even numbers.
